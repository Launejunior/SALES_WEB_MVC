// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SALES_WEB_MVC.Data;

#nullable disable

namespace SALES_WEB_MVC.Migrations
{
    [DbContext(typeof(SALES_WEB_MVCContext))]
    partial class SALES_WEB_MVCContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SALES_WEB_MVC.Models.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("SALES_WEB_MVC.Models.SalesRecorde", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AmountQuantidade")
                        .HasColumnType("float");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("SellerVendedorId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SellerVendedorId");

                    b.ToTable("SalesRecorde");
                });

            modelBuilder.Entity("SALES_WEB_MVC.Models.SellerVendedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("BaseSalário")
                        .HasColumnType("float");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("SellerVendedores");
                });

            modelBuilder.Entity("SALES_WEB_MVC.Models.SalesRecorde", b =>
                {
                    b.HasOne("SALES_WEB_MVC.Models.SellerVendedor", "SellerVendedor")
                        .WithMany("SalesRecorde")
                        .HasForeignKey("SellerVendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SellerVendedor");
                });

            modelBuilder.Entity("SALES_WEB_MVC.Models.SellerVendedor", b =>
                {
                    b.HasOne("SALES_WEB_MVC.Models.Departamento", "Departamento")
                        .WithMany("SellerVendedores")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("SALES_WEB_MVC.Models.Departamento", b =>
                {
                    b.Navigation("SellerVendedores");
                });

            modelBuilder.Entity("SALES_WEB_MVC.Models.SellerVendedor", b =>
                {
                    b.Navigation("SalesRecorde");
                });
#pragma warning restore 612, 618
        }
    }
}
